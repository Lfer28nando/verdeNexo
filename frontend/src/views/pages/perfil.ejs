<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Perfil - Vivero Verde Nexo</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        /* Estilos profesionales para la página de perfil */

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            min-height: 100vh;
        }

        /* Header del perfil */
        .profile-header {
            background: linear-gradient(135deg, #28a745 0%, #20c997 50%, #28a745 100%);
            color: white;
            padding: 4rem 0 2rem;
            margin-top: -1rem;
            position: relative;
            overflow: hidden;
        }

        .profile-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="80" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="40" cy="60" r="1" fill="rgba(255,255,255,0.1)"/></svg>') repeat;
            opacity: 0.3;
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 4px solid rgba(255, 255, 255, 0.3);
            object-fit: cover;
            margin: 0 auto;
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }

        .profile-welcome h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .profile-welcome p {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 0;
        }

        /* Navegación de secciones */
        .profile-nav {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .profile-nav .nav-link {
            color: #2c3e50;
            font-weight: 600;
            padding: 1rem 1.5rem;
            border: none;
            transition: all 0.3s ease;
        }

        .profile-nav .nav-link:hover {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            color: #28a745;
        }

        .profile-nav .nav-link.active {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
        }

        /* Contenido de secciones */
        .profile-section {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            padding: 2rem;
            margin-bottom: 2rem;
            transition: all 0.3s ease;
        }

        .profile-section:hover {
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .section-header {
            border-bottom: 2px solid #f8f9fa;
            padding-bottom: 1rem;
            margin-bottom: 1.5rem;
        }

        .section-header h3 {
            color: #2c3e50;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .section-header p {
            color: #6c757d;
            margin-bottom: 0;
        }

        /* Información personal */
        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid #f8f9fa;
        }

        .info-item:last-child {
            border-bottom: none;
        }

        .info-label {
            font-weight: 600;
            color: #2c3e50;
        }

        .info-value {
            color: #6c757d;
        }

        .btn-edit {
            background: linear-gradient(135deg, #28a745, #20c997);
            border: none;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn-edit:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

        /* Historial de pedidos */
        .order-card {
            border: 1px solid #e9ecef;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }

        .order-card:hover {
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            border-color: #28a745;
        }

        .order-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 600;
        }

        .status-completed {
            background: #d4edda;
            color: #155724;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
        }

        /* Favoritos */
        .favorite-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            border: 1px solid #e9ecef;
            border-radius: 10px;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }

        .favorite-item:hover {
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            border-color: #28a745;
        }

        .favorite-img {
            width: 80px;
            height: 80px;
            border-radius: 10px;
            object-fit: cover;
            margin-right: 1rem;
        }

        .favorite-info h5 {
            margin-bottom: 0.25rem;
            color: #2c3e50;
        }

        .favorite-info p {
            color: #6c757d;
            margin-bottom: 0;
        }

        .btn-remove-favorite {
            background: #dc3545;
            border: none;
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 5px;
            font-size: 0.875rem;
        }

        /* Configuración */
        .setting-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid #f8f9fa;
        }

        .setting-item:last-child {
            border-bottom: none;
        }

        .setting-label {
            font-weight: 600;
            color: #2c3e50;
        }

        .form-check-input:checked {
            background-color: #28a745;
            border-color: #28a745;
        }

        /* Animaciones */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .profile-section {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .profile-header {
                padding: 3rem 0 1.5rem;
            }

            .profile-avatar {
                width: 100px;
                height: 100px;
            }

            .profile-welcome h1 {
                font-size: 2rem;
            }

            .profile-section {
                padding: 1.5rem;
            }

            .info-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .favorite-item {
                flex-direction: column;
                text-align: center;
            }

            .favorite-img {
                margin-right: 0;
                margin-bottom: 1rem;
            }
        }

        /* Scroll suave */
        html {
            scroll-behavior: smooth;
        }

        /* Loading states */
        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 200px;
        }

        .spinner-border {
            color: #28a745;
        }

        /* Security sections */
        .security-section {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border-left: 4px solid #28a745;
        }

        .security-section h5 {
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .security-section p {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        /* QR Code styling */
        #qrCodeContainer img {
            max-width: 200px;
            margin: 0 auto;
        }

        /* Backup codes styling */
        #backupCodesContainer code {
            background: #e9ecef;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-family: monospace;
            display: inline-block;
            margin: 0.25rem;
        }
    </style>
</head>

<body>
    <!-- NAVBAR (DESKTOP)-->
    <nav class="navbar navbar-expand-lg navbar-vn sticky-top d-none d-lg-flex">
        <div class="container-fluid px-4 align-items-center">
            <!-- Secciones -->
            <div class="collapse navbar-collapse order-1 order-lg-0" id="navbar-vn-1" style="flex: 1;">
                <ul class="navbar-nav mb-3 mb-lg-0">
                    <li class="nav-item"><a class="nav-link navbar-vn-links" href="/">Inicio</a></li>
                    <li class="nav-item"><a class="nav-link navbar-vn-links" href="/catalogo">Catálogo</a></li>
                    <li class="nav-item"><a class="nav-link navbar-vn-links" href="/servicios">Servicios</a></li>
                    <li class="nav-item"><a class="nav-link navbar-vn-links" href="/blog">Blog</a></li>
                    <li class="nav-item"><a class="nav-link navbar-vn-links" href="/contacto">Contacto</a></li>
                </ul>
            </div>

            <!--Logo -->
            <div class="text-center order-0" style="flex: 1;">
                <a href="/"><img src="/img/logo.png" alt="Verde Nexo" height="45"></a>
            </div>

            <!--Buscador + botones -->
            <!---Buscador-->
            <div class="d-flex align-items-center justify-content-end order-2" style="flex: 1; gap: 0.75rem;">
                <form class="d-none d-lg-flex" role="search" style="min-width: 200px;">
                    <div class="input-group">
                        <span class="input-group-text">
                            <img src="/img/search-alt.png" alt="Buscar" width="16" height="16">
                        </span>
                        <input class="form-control" type="search" placeholder="Buscar..." aria-label="Buscar">
                    </div>
                </form>
                <!-- Botones de logout -->
                <div class="d-flex" style="gap: 0.5rem;">
                    <button id="logoutBtn" class="btn btn-vn-session" type="button">
                        <i class="fas fa-sign-out-alt" style="font-size: 20px;"></i>
                    </button>
                    <!-- Carrito de compras -->
                    <button class="btn btn-vn-session position-relative" aria-expanded="false" type="button">
                        <img src="/img/shopping-cart-alt.png" alt="carrito" width="20" height="20">
                        <span class="badge bg-danger position-absolute top-0 start-100 translate-middle rounded-pill">0</span>
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <!-- NAVBAR (MOBILE)-->
    <header class="d-lg-none py-3">
        <div class="container d-flex justify-content-between align-items-center">
            <!-- logo centrado -->
            <div class="flex-fill text-start">
                <!--icono izquierdo vacío para centrar mejor -->
            </div>
            <div class="flex-fill text-center">
                <a href="/"><img src="/img/logo.png" alt="Verde Nexo" height="40"></a>
            </div>
            <div class="flex-fill text-end">
                <button id="logoutBtnMobile" class="btn btn-outline-danger btn-sm">
                    <i class="fas fa-sign-out-alt me-2"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- BOTTOM NAV para mobile -->
    <nav class="bottom-nav d-lg-none">
        <a href="/" class="bottom-nav-item">
            <img src="/img/icon-home.svg" alt="Home" width="22" height="22" class="icon-white"><span>Inicio</span>
        </a>
        <a href="/catalogo" class="bottom-nav-item">
            <img src="/img/icon-search.svg" alt="Buscar" width="22" height="22" class="icon-white"><span>Buscar</span>
        </a>
        <a href="/favoritos" class="bottom-nav-item">
            <img src="/img/icon-heart.svg" alt="Favoritos" width="22" height="22" class="icon-white"><span>Favoritos</span>
        </a>
        <a href="/perfil" class="bottom-nav-item active">
            <img src="/img/icon-user.svg" alt="Perfil" width="22" height="22" class="icon-white"><span>Perfil</span>
        </a>
    </nav>

    <!-- Header del Perfil -->
    <section class="profile-header">
        <div class="container">
            <div class="row justify-content-center text-center">
                <div class="col-md-8">
                    <img src="https://pic.onlinewebfonts.com/thumbnails/icons_281692.svg" alt="Avatar" class="profile-avatar mb-4">
                    <div class="profile-welcome">
                        <h1 id="welcomeName">Bienvenido</h1>
                        <p id="welcomeEmail">Cargando información...</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Contenido Principal -->
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <!-- Navegación de Secciones -->
                <ul class="nav nav-pills profile-nav mb-4" id="profileTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="info-tab" data-bs-toggle="pill" data-bs-target="#info" type="button" role="tab">Información</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="security-tab" data-bs-toggle="pill" data-bs-target="#security" type="button" role="tab">Seguridad</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="preferences-tab" data-bs-toggle="pill" data-bs-target="#preferences" type="button" role="tab">Preferencias</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="favorites-tab" data-bs-toggle="pill" data-bs-target="#favorites" type="button" role="tab">Favoritos</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="orders-tab" data-bs-toggle="pill" data-bs-target="#orders" type="button" role="tab">Pedidos</button>
                    </li>
                </ul>

                <!-- Contenido de las Secciones -->
                <div class="tab-content" id="profileTabContent">
                    <!-- Información Personal -->
                    <div class="tab-pane fade show active" id="info" role="tabpanel">
                        <div class="profile-section">
                            <div class="section-header">
                                <h3><i class="fas fa-user me-2"></i>Información Personal</h3>
                                <p>Administra tu información de cuenta</p>
                            </div>
                            <div id="personalInfo">
                                <div class="loading">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Cargando...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Seguridad -->
                    <div class="tab-pane fade" id="security" role="tabpanel">
                        <div class="profile-section">
                            <div class="section-header">
                                <h3><i class="fas fa-shield-alt me-2"></i>Seguridad de la Cuenta</h3>
                                <p>Protege tu cuenta con medidas de seguridad avanzadas</p>
                            </div>
                            <div id="securityContent">
                                <div class="loading">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Cargando...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Preferencias -->
                    <div class="tab-pane fade" id="preferences" role="tabpanel">
                        <div class="profile-section">
                            <div class="section-header">
                                <h3><i class="fas fa-cog me-2"></i>Preferencias</h3>
                                <p>Personaliza tu experiencia en Verde Nexo</p>
                            </div>
                            <div id="preferencesContent">
                                <div class="setting-item">
                                    <div>
                                        <span class="setting-label">Notificaciones por email</span>
                                        <p class="text-muted mb-0">Recibe actualizaciones sobre tus pedidos</p>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="emailNotifications" checked>
                                    </div>
                                </div>
                                <div class="setting-item">
                                    <div>
                                        <span class="setting-label">Recordatorios de riego</span>
                                        <p class="text-muted mb-0">Recibe consejos de cuidado para tus plantas</p>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="wateringReminders" checked>
                                    </div>
                                </div>
                                <div class="setting-item">
                                    <div>
                                        <span class="setting-label">Ofertas especiales</span>
                                        <p class="text-muted mb-0">Descuentos y promociones exclusivas</p>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="specialOffers">
                                    </div>
                                </div>
                                <div class="setting-item">
                                    <div>
                                        <span class="setting-label">Idioma</span>
                                        <p class="text-muted mb-0">Selecciona tu idioma preferido</p>
                                    </div>
                                    <select class="form-select w-auto">
                                        <option value="es" selected>Español</option>
                                        <option value="en">English</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Favoritos -->
                    <div class="tab-pane fade" id="favorites" role="tabpanel">
                        <div class="profile-section">
                            <div class="section-header">
                                <h3><i class="fas fa-heart me-2"></i>Mis Favoritos</h3>
                                <p>Productos que has marcado como favoritos</p>
                            </div>
                            <div id="favoritesList">
                                <div class="loading">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Cargando...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Pedidos -->
                    <div class="tab-pane fade" id="orders" role="tabpanel">
                        <div class="profile-section">
                            <div class="section-header">
                                <h3><i class="fas fa-shopping-bag me-2"></i>Mis Pedidos</h3>
                                <p>Historial de tus compras y pedidos realizados</p>
                            </div>
                            <div id="ordersList">
                                <div class="text-center py-5">
                                    <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                                    <h5 class="text-muted">No tienes pedidos aún</h5>
                                    <p class="text-muted">Cuando realices tu primera compra, aparecerá aquí.</p>
                                    <a href="/" class="btn btn-success">
                                        <i class="fas fa-store me-2"></i>Ir a la tienda
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>

    <!-- Modal para editar perfil -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProfileModalLabel">Editar Perfil</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProfileForm">
                        <div class="mb-3">
                            <label for="editUsername" class="form-label">Nombre de usuario *</label>
                            <input type="text" class="form-control" id="editUsername" required>
                            <div class="form-text">Tu nombre de usuario público</div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="editDocumentType" class="form-label">Tipo de documento</label>
                                <select class="form-select" id="editDocumentType">
                                    <option value="">Seleccionar...</option>
                                    <option value="Cédula">Cédula</option>
                                    <option value="Cédula de extranjería">Cédula de extranjería</option>
                                    <option value="PPT">PPT</option>
                                    <option value="Pasaporte">Pasaporte</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="editDocument" class="form-label">Número de documento</label>
                                <input type="text" class="form-control" id="editDocument" placeholder="Ej: 12345678">
                                <div class="form-text">Solo números y letras</div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="editCellphone" class="form-label">Teléfono celular</label>
                            <input type="tel" class="form-control" id="editCellphone" placeholder="Ej: +5491123456789">
                            <div class="form-text">Incluye código de país (+54 para Argentina)</div>
                        </div>

                        <div class="mb-3">
                            <label for="editAddress" class="form-label">Dirección</label>
                            <textarea class="form-control" id="editAddress" rows="3" placeholder="Ej: Calle 123, Ciudad, Provincia"></textarea>
                            <div class="form-text">Dirección completa para entregas</div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" onclick="saveProfile()">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para configurar 2FA -->
    <div class="modal fade" id="setup2FAModal" tabindex="-1" aria-labelledby="setup2FAModalLabel">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="setup2FAModalLabel">Configurar Autenticación de Dos Factores</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center mb-4">
                        <h6>Escanea este código QR con tu app autenticadora</h6>
                        <div id="qrCodeContainer" class="mb-3"></div>
                        <small class="text-muted">O ingresa manualmente: <code id="secretCode"></code></small>
                    </div>
                    
                    <div class="alert alert-info">
                        <strong>Códigos de respaldo:</strong> Guarda estos códigos en un lugar seguro. Los necesitarás si pierdes acceso a tu app autenticadora.
                        <div id="backupCodesContainer" class="mt-2 p-2 bg-light rounded">
                            <!-- Códigos se mostrarán aquí -->
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="twoFactorCode" class="form-label">Ingresa el código de 6 dígitos de tu app:</label>
                        <input type="text" class="form-control text-center" id="twoFactorCode" maxlength="6" placeholder="000000">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" onclick="verifyAndEnable2FA()">Activar 2FA</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para cambiar email -->
    <div class="modal fade" id="changeEmailModal" tabindex="-1" aria-labelledby="changeEmailModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="changeEmailModalLabel">Confirmar Cambio de Email</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-info">
                        <i class="fas fa-envelope me-2"></i>
                        Se envió un código de confirmación a <strong id="newEmailDisplay"></strong>
                    </div>
                    
                    <div class="mb-3">
                        <label for="emailChangeCode" class="form-label">Ingresa el código de 6 dígitos:</label>
                        <input type="text" class="form-control text-center" id="emailChangeCode" maxlength="6" placeholder="000000">
                    </div>
                    
                    <small class="text-muted">
                        El código expira en 1 hora. Si no lo recibiste, verifica tu carpeta de spam.
                    </small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" onclick="confirmEmailChange()">Confirmar Cambio</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para cambiar contraseña -->
    <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="changePasswordModalLabel">Cambiar Contraseña</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="changePasswordForm">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Contraseña actual *</label>
                            <input type="password" class="form-control" id="currentPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">Nueva contraseña *</label>
                            <input type="password" class="form-control" id="newPassword" required>
                            <div class="form-text">Mínimo 6 caracteres</div>
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirmar nueva contraseña *</label>
                            <input type="password" class="form-control" id="confirmPassword" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" onclick="submitChangePassword()">Cambiar Contraseña</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para desactivar 2FA -->
    <div class="modal fade" id="disable2FAModal" tabindex="-1" aria-labelledby="disable2FAModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="disable2FAModalLabel">Desactivar Autenticación de Dos Factores</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Advertencia:</strong> Desactivar la autenticación de dos factores reducirá la seguridad de tu cuenta.
                    </div>
                    <p>Para confirmar, ingresa tu contraseña actual:</p>
                    <div class="mb-3">
                        <label for="disable2FAPassword" class="form-label">Contraseña actual *</label>
                        <input type="password" class="form-control" id="disable2FAPassword" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" onclick="submitDisable2FA()">Desactivar 2FA</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para cambiar email -->
    <div class="modal fade" id="changeEmailRequestModal" tabindex="-1" aria-labelledby="changeEmailRequestModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="changeEmailRequestModalLabel">Cambiar Dirección de Email</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="changeEmailForm">
                        <div class="mb-3">
                            <label for="newEmail" class="form-label">Nueva dirección de email *</label>
                            <input type="email" class="form-control" id="newEmail" required>
                            <div class="form-text">Se enviará un código de confirmación a esta dirección</div>
                        </div>
                        <div class="mb-3">
                            <label for="emailChangePassword" class="form-label">Contraseña actual *</label>
                            <input type="password" class="form-control" id="emailChangePassword" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" onclick="submitChangeEmailRequest()">Enviar Código</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para darse de baja -->
    <div class="modal fade" id="unsubscribeModal" tabindex="-1" aria-labelledby="unsubscribeModalLabel">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="unsubscribeModalLabel">
                        <i class="fas fa-exclamation-triangle me-2"></i>Eliminar Cuenta
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">
                        <strong>¡Advertencia!</strong> Esta acción es irreversible. Se eliminarán permanentemente:
                        <ul class="mb-0 mt-2">
                            <li>Tu cuenta de usuario</li>
                            <li>Todos tus datos personales</li>
                            <li>Tu historial de pedidos</li>
                            <li>Tus productos favoritos</li>
                            <li>Todas tus configuraciones</li>
                        </ul>
                    </div>

                    <p class="text-muted mb-3">
                        Si estás seguro de que quieres continuar, ingresa tu contraseña actual para confirmar.
                    </p>

                    <form id="unsubscribeForm">
                        <div class="mb-3">
                            <label for="unsubscribePassword" class="form-label">
                                <strong>Contraseña actual *</strong>
                            </label>
                            <input type="password" class="form-control" id="unsubscribePassword" required
                                   placeholder="Ingresa tu contraseña">
                            <div class="form-text">Esta acción no se puede deshacer.</div>
                        </div>

                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="confirmDelete" required>
                            <label class="form-check-label" for="confirmDelete">
                                Entiendo que esta acción es permanente y no se puede deshacer.
                            </label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancelar
                    </button>
                    <button type="button" class="btn btn-danger" onclick="submitUnsubscribe()">
                        <i class="fas fa-user-times me-1"></i>Eliminar mi cuenta
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para confirmar éxito -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center p-4">
                    <img src="https://pic.onlinewebfonts.com/thumbnails/icons_561986.svg" alt="Check" width="80" height="80" class="mb-3">
                    <h5 class="modal-title text-success mb-3" id="successModalLabel">¡Perfil actualizado correctamente!</h5>
                    <p class="text-muted mb-0">Los cambios se han guardado exitosamente.</p>
                </div>
                <div class="modal-footer justify-content-center border-0">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">Aceptar</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // API configuration
        const API = axios.create({
          baseURL: 'http://localhost:3000/',
          withCredentials: true
        });

        API.interceptors.response.use(
          res => res,
          err => {
            console.error('API response error', err);
            return Promise.reject(err);
          }
        );

        // Auth guard function
        async function authGuard(redirectTo = '/login') {
          try {
            let res = await API.get('/auth/me');
            if (res?.data?.ok && res.data.user) {
              return;
            }
          } catch (err) {
            try {
              let res = await API.get('/api/auth/profile');
              if (res?.data?.success && res.data.user) {
                return;
              }
            } catch (err2) {
              // No autenticado
            }
          }
          window.location.replace(redirectTo);
        }

        // Ejecutar guard al cargar
        document.addEventListener('DOMContentLoaded', () => {
            authGuard('/login');
            
            // Agregar event listeners para logout
            const logoutBtn = document.getElementById('logoutBtn');
            const logoutBtnMobile = document.getElementById('logoutBtnMobile');
            
            if (logoutBtn) {
                logoutBtn.addEventListener('click', logout);
            }
            if (logoutBtnMobile) {
                logoutBtnMobile.addEventListener('click', logout);
            }
        });

        // Función para cargar información del usuario
        async function loadUserInfo() {
            try {
                let res = await API.get('/api/auth/profile');
                if (res.data.success) {
                    const user = res.data.user;
                    populateUserData(user);
                    return;
                }
            } catch (err) {
                // Error
            }
            // Si no carga, redirigir
            window.location.replace('/login');
        }

        // Función para poblar los datos del usuario
        function populateUserData(user) {
            // Guardar en localStorage para edición
            localStorage.setItem('user', JSON.stringify(user));
            
            // Función para traducir roles
            function translateRole(role) {
                const roleTranslations = {
                    'admin': 'Administrador',
                    'seller': 'Vendedor',
                    'client': 'Cliente'
                };
                return roleTranslations[role] || 'Usuario';
            }
            
            // Header
            document.getElementById('welcomeName').textContent = `¡Hola, ${user.username}!`;
            document.getElementById('welcomeEmail').textContent = user.email;

            // Información personal
            document.getElementById('personalInfo').innerHTML = `
                <div class="info-item">
                    <span class="info-label">Nombre de usuario:</span>
                    <span class="info-value">${user.username}</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Correo electrónico:</span>
                    <div class="d-flex align-items-center gap-2">
                        <span class="info-value">${user.email}</span>
                        ${user.verifiedEmail ? 
                            '<span class="badge bg-success"><i class="fas fa-check me-1"></i>Verificado</span>' : 
                            '<span class="badge bg-warning text-dark"><i class="fas fa-exclamation-triangle me-1"></i>No verificado</span>'}
                        ${!user.verifiedEmail ? '<button class="btn btn-sm btn-outline-primary" onclick="requestEmailVerification()"><i class="fas fa-envelope me-1"></i>Verificar</button>' : ''}
                    </div>
                </div>
                <div class="info-item">
                    <span class="info-label">Documento:</span>
                    <span class="info-value">
                        ${user.documentType && user.document ? `${user.documentType}: ${user.document}` : 'No especificado'}
                    </span>
                </div>
                <div class="info-item">
                    <span class="info-label">Teléfono:</span>
                    <span class="info-value">${user.cellphone || 'No especificado'}</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Dirección:</span>
                    <span class="info-value">${user.address || 'No especificado'}</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Rol:</span>
                    <span class="info-value">${translateRole(user.role)}</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Miembro desde:</span>
                    <span class="info-value">${new Date(user.createdAt || Date.now()).toLocaleDateString('es-ES')}</span>
                </div>
                <div class="mt-4">
                    <button class="btn btn-edit" onclick="editProfile()">
                        <i class="fas fa-edit me-2"></i>Editar Perfil
                    </button>
                </div>
            `;

        // Llamar a populateSecurityContent después de populateUserData
        populateSecurityContent(user);

        // Cargar favoritos del usuario
        loadUserFavorites(user._id || user.id);

        // Inicializar event listeners después de cargar todo el contenido
        initializeEventListeners();
    }

    // Contenido de seguridad
    function populateSecurityContent(user) {
        document.getElementById('securityContent').innerHTML =
            '<div class="security-section mb-4">' +
                '<h5><i class="fas fa-key me-2"></i>Cambiar Contraseña</h5>' +
                '<p class="text-muted">Actualiza tu contraseña regularmente para mantener tu cuenta segura.</p>' +
                '<button class="btn btn-outline-primary" onclick="changePassword()">' +
                    '<i class="fas fa-lock me-2"></i>Cambiar Contraseña' +
                '</button>' +
            '</div>' +
            '<div class="security-section mb-4">' +
                '<h5><i class="fas fa-mobile-alt me-2"></i>Autenticación de Dos Factores (2FA)</h5>' +
                '<p class="text-muted">Añade una capa extra de seguridad a tu cuenta con códigos TOTP.</p>' +
                '<div class="d-flex align-items-center gap-3">' +
                    (user.twoFactorEnabled ?
                        '<span class="badge bg-success fs-6"><i class="fas fa-check me-1"></i>2FA Activado</span>' :
                        '<span class="badge bg-secondary fs-6"><i class="fas fa-times me-1"></i>2FA Desactivado</span>') +
                    '<button class="btn ' + (user.twoFactorEnabled ? 'btn-outline-danger' : 'btn-outline-success') + '" onclick="' + (user.twoFactorEnabled ? 'disable2FA()' : 'setup2FA()') + '">' +
                        '<i class="fas ' + (user.twoFactorEnabled ? 'fa-times' : 'fa-plus') + ' me-2"></i>' + (user.twoFactorEnabled ? 'Desactivar 2FA' : 'Configurar 2FA') +
                    '</button>' +
                '</div>' +
            '</div>' +
            '<div class="security-section mb-4">' +
                '<h5><i class="fas fa-envelope me-2"></i>Cambiar Dirección de Email</h5>' +
                '<p class="text-muted">Actualiza tu dirección de email. Recibirás un código de confirmación en la nueva dirección.</p>' +
                '<button class="btn btn-outline-primary" onclick="changeEmail()">' +
                    '<i class="fas fa-edit me-2"></i>Cambiar Email' +
                '</button>' +
            '</div>' +
            '<div class="security-section border-danger mb-4" style="border-left: 4px solid #dc3545; background-color: #fff5f5;">' +
                '<h5 class="text-danger"><i class="fas fa-exclamation-triangle me-2"></i>Zona de Peligro</h5>' +
                '<p class="text-muted">Acciones irreversibles que afectan permanentemente tu cuenta.</p>' +
                '<button class="btn btn-outline-danger" id="showUnsubscribe">' +
                    '<i class="fas fa-user-times me-2"></i>Eliminar mi cuenta' +
                '</button>' +
                '<small class="text-muted d-block mt-2">Esta acción no se puede deshacer. Se eliminarán todos tus datos permanentemente.</small>' +
            '</div>';
    }

    // Función para inicializar event listeners después de cargar el contenido
    function initializeEventListeners() {
        // Event listener para el botón de darse de baja
        const unsubscribeLink = document.getElementById('showUnsubscribe');
        if (unsubscribeLink) {
            unsubscribeLink.addEventListener('click', function(e) {
                e.preventDefault();
                document.getElementById('unsubscribePassword').value = '';
                document.getElementById('confirmDelete').checked = false;
                const modal = new bootstrap.Modal(document.getElementById('unsubscribeModal'));
                modal.show();
            });
        }
    }

    // ...existing code...

        // Renderizar favoritos
        async function loadUserFavorites(userId) {
            const container = document.getElementById('favoritesList');
            container.innerHTML = '<div class="loading"><div class="spinner-border" role="status"><span class="visually-hidden">Cargando...</span></div></div>';
            try {
                const res = await API.get(`/api/users/${userId}/favorites`);
                if (res.data.ok && Array.isArray(res.data.favorites)) {
                    if (res.data.favorites.length === 0) {
                        container.innerHTML = '<p class="text-center text-muted">No tienes productos favoritos.</p>';
                        return;
                    }
                    container.innerHTML = res.data.favorites.map(fav => `
                        <div class="favorite-item">
                            <img src="${fav.imagen ? fav.imagen : 'https://pic.onlinewebfonts.com/thumbnails/icons_574013.svg'}" alt="${fav.nombre}" class="favorite-img">
                            <div class="favorite-info flex-grow-1">
                                <h5>${fav.nombre}</h5>
                                <p>${fav.descripcion || ''}</p>
                                <p class="fw-bold text-success">$${fav.precioBase ? fav.precioBase.toFixed(2) : ''}</p>
                            </div>
                            <button class="btn btn-remove-favorite" onclick="removeFavorite('${fav._id}')">
                                <i class="fas fa-trash me-1"></i>Quitar
                            </button>
                        </div>
                    `).join('');
                } else {
                    container.innerHTML = '<p class="text-center text-muted">No tienes productos favoritos.</p>';
                }
            } catch (err) {
                if (!err.response) {
                    container.innerHTML = '<p class="text-center text-danger">Error de conexión. Verifica tu internet.</p>';
                } else {
                    container.innerHTML = '<p class="text-center text-muted">No tienes productos favoritos.</p>';
                }
            }
        }

        // Función para quitar favorito
        async function removeFavorite(favoriteId) {
            if (!confirm('¿Estás seguro de que quieres quitar este producto de tus favoritos?')) {
                return;
            }

            try {
                const user = JSON.parse(localStorage.getItem('user') || '{}');
                const userId = user._id || user.id;

                if (!userId) {
                    alert('Error: Usuario no identificado.');
                    return;
                }

                // Hacer petición DELETE para quitar el favorito
                const res = await API.delete(`/api/users/${userId}/favorites/${favoriteId}`);

                if (res.data.success) {
                    // Recargar la lista de favoritos
                    loadUserFavorites(userId);
                    alert('Producto quitado de favoritos exitosamente.');
                } else {
                    alert(res.data.message || 'Error al quitar el favorito.');
                }
            } catch (err) {
                console.error('Error al quitar favorito:', err);
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al quitar el favorito.');
                }
            }
        }

        // Función para editar perfil
        function editProfile() {
            // Obtener datos actuales del usuario
            const user = JSON.parse(localStorage.getItem('user') || '{}');
            document.getElementById('editUsername').value = user.username || '';
            document.getElementById('editDocumentType').value = user.documentType || '';
            document.getElementById('editDocument').value = user.document || '';
            document.getElementById('editCellphone').value = user.cellphone || '';
            document.getElementById('editAddress').value = user.address || '';
            
            // Mostrar modal
            const modal = new bootstrap.Modal(document.getElementById('editProfileModal'));
            modal.show();
        }

        // Función para guardar cambios del perfil
        window.saveProfile = async function() {
            // Verificar que los elementos existan
            const usernameEl = document.getElementById('editUsername');
            if (!usernameEl) {
                console.error('Username element not found');
                alert('Error: Elemento no encontrado. Recarga la página.');
                return;
            }

            const username = usernameEl.value.trim();
            const documentType = document.getElementById('editDocumentType').value;
            const documentNumber = document.getElementById('editDocument').value.trim();
            const cellphone = document.getElementById('editCellphone').value.trim();
            const address = document.getElementById('editAddress').value.trim();

            // Validaciones básicas
            if (!username) {
                alert('El nombre de usuario es obligatorio.');
                return;
            }

            // Validar que si hay tipo de documento, también debe haber número
            if (documentType && !documentNumber) {
                alert('Si seleccionas un tipo de documento, debes ingresar el número.');
                return;
            }

            // Validar que si hay número de documento, también debe haber tipo
            if (documentNumber && !documentType) {
                alert('Si ingresas un número de documento, debes seleccionar el tipo.');
                return;
            }

            try {
                // Preparar datos para enviar
                const profileData = { username };

                // Agregar campos opcionales solo si tienen valor
                if (documentType) profileData.documentType = documentType;
                if (documentNumber) profileData.document = documentNumber;
                if (cellphone) profileData.cellphone = cellphone;
                if (address) profileData.address = address;

                const profileRes = await API.put('/api/auth/edit', profileData);
                
                if (!profileRes.data.success) {
                    alert(profileRes.data.message || 'Error al actualizar el perfil.');
                    return;
                }

                // Mostrar modal de éxito
                const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                successModal.show();
                
                // Actualizar datos en localStorage
                const updatedUser = profileRes.data.user;
                localStorage.setItem('user', JSON.stringify(updatedUser));
                
                // Recargar información del perfil
                populateUserData(updatedUser);
                
                // Cerrar modal de edición
                bootstrap.Modal.getInstance(document.getElementById('editProfileModal')).hide();
                
            } catch (err) {
                console.error('Error al guardar perfil:', err);
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al actualizar el perfil.');
                }
            }
        };

        // Función para solicitar verificación de email
        async function requestEmailVerification() {
            try {
                const res = await API.post('/api/auth/requestEmailVerification');
                if (res.data.success) {
                    alert('Código de verificación enviado a tu email.');
                } else {
                    alert(res.data.message || 'Error al enviar código de verificación.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al solicitar verificación.');
                }
            }
        }

        // Función para cambiar contraseña
        async function changePassword() {
            // Limpiar formulario
            document.getElementById('changePasswordForm').reset();
            
            // Mostrar modal
            const modal = new bootstrap.Modal(document.getElementById('changePasswordModal'));
            modal.show();
        }

        // Función para enviar cambio de contraseña
        async function submitChangePassword() {
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            // Validaciones
            if (!currentPassword || !newPassword || !confirmPassword) {
                alert('Todos los campos son obligatorios.');
                return;
            }

            if (newPassword.length < 6) {
                alert('La nueva contraseña debe tener al menos 6 caracteres.');
                return;
            }

            if (newPassword !== confirmPassword) {
                alert('Las contraseñas no coinciden.');
                return;
            }

            if (currentPassword === newPassword) {
                alert('La nueva contraseña debe ser diferente a la actual.');
                return;
            }

            try {
                const res = await API.put('/api/auth/changePassword', {
                    currentPassword,
                    newPassword
                });

                if (res.data.success) {
                    // Cerrar modal
                    bootstrap.Modal.getInstance(document.getElementById('changePasswordModal')).hide();
                    
                    // Mostrar modal de éxito
                    document.getElementById('successModalLabel').textContent = '¡Contraseña cambiada exitosamente!';
                    const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                } else {
                    alert(res.data.message || 'Error al cambiar contraseña.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al cambiar contraseña.');
                }
            }
        }

        // Función para configurar 2FA
        async function setup2FA() {
            try {
                // Enviar body vacío JSON explícitamente para evitar 400 por falta de req.body
                const res = await API.post('/api/auth/setup2FA', {});
                if (res.data.success) {
                    // Mostrar modal con QR code
                    show2FASetupModal(res.data.secret, res.data.qrCode, res.data.backupCodes);
                } else {
                    alert(res.data.message || 'Error al configurar 2FA.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    // Manejar errores específicos del backend
                    const errorMessage = err.response.data?.error?.message || err.response.data?.message || 'Error al configurar 2FA.';
                    alert(errorMessage);
                }
            }
        }

        // Función para desactivar 2FA
        async function disable2FA() {
            // Limpiar formulario
            document.getElementById('disable2FAForm').reset();
            
            // Mostrar modal
            const modal = new bootstrap.Modal(document.getElementById('disable2FAModal'));
            modal.show();
        }

        // Función para enviar desactivación de 2FA
        async function submitDisable2FA() {
            const currentPassword = document.getElementById('disable2FAPassword').value;

            if (!currentPassword) {
                alert('Debes ingresar tu contraseña actual.');
                return;
            }

            try {
                const res = await API.post('/api/auth/disable2FA', { currentPassword });
                if (res.data.success) {
                    // Cerrar modal
                    bootstrap.Modal.getInstance(document.getElementById('disable2FAModal')).hide();
                    
                    // Mostrar modal de éxito
                    document.getElementById('successModalLabel').textContent = '2FA desactivado exitosamente.';
                    const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                    
                    // Recargar datos del usuario
                    loadUserInfo();
                } else {
                    alert(res.data.message || 'Error al desactivar 2FA.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al desactivar 2FA.');
                }
            }
        }

        // Función para cambiar email
        async function changeEmail() {
            // Limpiar formulario
            document.getElementById('changeEmailForm').reset();
            
            // Mostrar modal
            const modal = new bootstrap.Modal(document.getElementById('changeEmailRequestModal'));
            modal.show();
        }

        // Función para enviar solicitud de cambio de email
        async function submitChangeEmailRequest() {
            const newEmail = document.getElementById('newEmail').value;
            const currentPassword = document.getElementById('changeEmailPassword').value;

            // Validaciones
            if (!newEmail || !currentPassword) {
                alert('Todos los campos son obligatorios.');
                return;
            }

            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(newEmail)) {
                alert('Ingresa una dirección de email válida.');
                return;
            }

            try {
                const res = await API.post('/api/auth/requestEmailChange', {
                    newEmail,
                    currentPassword
                });

                if (res.data.success) {
                    // Cerrar modal de solicitud
                    bootstrap.Modal.getInstance(document.getElementById('changeEmailRequestModal')).hide();
                    
                    // Mostrar modal para ingresar código
                    showEmailChangeModal(newEmail);
                } else {
                    alert(res.data.message || 'Error al solicitar cambio de email.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al solicitar cambio de email.');
                }
            }
        }

        // Función para logout
        async function logout() {
            try {
                await API.get('/api/auth/logout');
                window.location.replace('/login');
            } catch (err) {
                console.error('Error en logout:', err);
                // Aun así redirigir
                window.location.replace('/login');
            }
        }

        // Función para mostrar modal de setup 2FA
        function show2FASetupModal(secret, qrCode, backupCodes) {
            document.getElementById('qrCodeContainer').innerHTML = '<img src="' + qrCode + '" alt="QR Code" class="img-fluid">';
            document.getElementById('secretCode').textContent = secret;
            var backupHtml = '';
            for (var i = 0; i < backupCodes.length; i++) {
                backupHtml += '<code class="me-2">' + backupCodes[i] + '</code>';
            }
            document.getElementById('backupCodesContainer').innerHTML = backupHtml;
            document.getElementById('twoFactorCode').value = '';
            var modal = new bootstrap.Modal(document.getElementById('setup2FAModal'));
            modal.show();
        }

        // Función para verificar y activar 2FA
        async function verifyAndEnable2FA() {
            const code = document.getElementById('twoFactorCode').value.trim();
            
            if (!code || code.length !== 6) {
                alert('Ingresa un código válido de 6 dígitos.');
                return;
            }

            try {
                const res = await API.post('/api/auth/verify2FA', { code });
                if (res.data.success) {
                    // Cerrar modal
                    bootstrap.Modal.getInstance(document.getElementById('setup2FAModal')).hide();
                    
                    // Mostrar modal de éxito
                    document.getElementById('successModalLabel').textContent = '2FA activado exitosamente.';
                    const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                    
                    // Recargar datos del usuario
                    loadUserInfo();
                } else {
                    alert(res.data.message || 'Código inválido.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al verificar código.');
                }
            }
        }

        // Función para mostrar modal de cambio de email
        function showEmailChangeModal(newEmail) {
            document.getElementById('newEmailDisplay').textContent = newEmail;
            document.getElementById('emailChangeCode').value = '';
            
            const modal = new bootstrap.Modal(document.getElementById('changeEmailModal'));
            modal.show();
        }

        // Función para confirmar cambio de email
        async function confirmEmailChange() {
            const code = document.getElementById('emailChangeCode').value.trim();
            
            if (!code || code.length !== 6) {
                alert('Ingresa un código válido de 6 dígitos.');
                return;
            }

            try {
                const res = await API.post('/api/auth/confirmEmailChange', { code });
                if (res.data.success) {
                    // Cerrar modal
                    bootstrap.Modal.getInstance(document.getElementById('changeEmailModal')).hide();
                    
                    // Mostrar modal de éxito
                    document.getElementById('successModalLabel').textContent = 'Email actualizado exitosamente.';
                    const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                    
                    // Recargar datos del usuario
                    loadUserInfo();
                } else {
                    alert(res.data.message || 'Código inválido.');
                }
            } catch (err) {
                if (!err.response) {
                    alert('Error de conexión. Verifica tu internet.');
                } else {
                    alert(err.response.data?.message || 'Error al confirmar cambio.');
                }
            }
        }

        // Hacer funciones globales para onclick
        window.editProfile = editProfile;
        window.removeFavorite = removeFavorite;
        window.requestEmailVerification = requestEmailVerification;
        window.changePassword = changePassword;
        window.submitChangePassword = submitChangePassword;
        window.setup2FA = setup2FA;
        window.disable2FA = disable2FA;
        window.submitDisable2FA = submitDisable2FA;
        window.changeEmail = changeEmail;
        window.submitChangeEmailRequest = submitChangeEmailRequest;
        window.verifyAndEnable2FA = verifyAndEnable2FA;
        window.confirmEmailChange = confirmEmailChange;

        // Cargar info al cargar la página
        loadUserInfo();

    // Función para enviar baja
    window.submitUnsubscribe = async function() {
        const password = document.getElementById('unsubscribePassword').value;
        const confirmDelete = document.getElementById('confirmDelete').checked;

        if (!password) {
            alert('Debes ingresar tu contraseña.');
            return;
        }

        if (!confirmDelete) {
            alert('Debes confirmar que entiendes que esta acción es permanente.');
            return;
        }

        // Confirmación adicional
        if (!confirm('¿Estás completamente seguro? Esta acción eliminará tu cuenta permanentemente y no se puede deshacer.')) {
            return;
        }

        try {
            const res = await API.post('/api/auth/unsubscribe', { password });
            if (res.data.success) {
                bootstrap.Modal.getInstance(document.getElementById('unsubscribeModal')).hide();
                alert('Cuenta eliminada correctamente. ¡Gracias por haber sido parte!');
                window.location.replace('/');
            } else {
                alert(res.data.message || 'No se pudo eliminar la cuenta.');
            }
        } catch (err) {
            console.error('Error al eliminar cuenta:', err);
            if (!err.response) {
                alert('Error de conexión. Verifica tu internet.');
            } else {
                alert(err.response.data?.message || 'Error al eliminar la cuenta.');
            }
        }
    };
    </script>
</body>

</html>

<%- include('../partials/footer') %>